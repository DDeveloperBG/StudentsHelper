@using Microsoft.AspNetCore.Http.Extensions
@using StudentsHelper.Services.Data.Paging.NewPaging
@using StudentsHelper.Web.ViewModels.Paging
@inject IPagingService pagingService

@model PagingData

@if (Model.CurrentPageCollectionCount > 0)
{
    int start = (Model.CurrentPage - 1) * Model.PageSize + 1;
    int all = (Model.AllPagesCount - 1) * Model.PageSize + Model.CurrentPageCollectionCount;

    all = all < 0 ? 0 : all;
    start = all == 0 ? 0 : start;

    int to = start + Model.CurrentPageCollectionCount - 1;

    string currentUrl = Context.Request.GetDisplayUrl();

    var queryString = Context.Request.QueryString.Value;
    var splitedQueryString = queryString.Split(new char[] { '&', '?' }, StringSplitOptions.RemoveEmptyEntries);
    Func<int, string> getUpdatedQueryString = (newPage)
        => pagingService.UpdateQueryString(
            currentUrl,
            queryString,
            splitedQueryString,
            newPage);

    <nav class="mt-4">
        <ul class="pagination">
            <li class="mr-4">
                <p class="mt-2 text-center">
                    @(start) -
                    @(to) от
                    @(all)
                </p>
            </li>

            <li class="page-item @(start == 1 ? "disabled" : string.Empty)">
                <a class="page-link" href="@getUpdatedQueryString(1)" aria-label="First">
                    <span aria-hidden="true">Първи</span>
                </a>
            </li>

            @for (int i = 1; i <= 2 && Model.CurrentPage - i >= 1; i++)
            {
                <li class="page-item">
                    <a class="page-link" href="@getUpdatedQueryString(Model.CurrentPage - i)">@(Model.CurrentPage - i)</a>
                </li>
            }

            <li class="page-item">
                <a class="page-link" href="@getUpdatedQueryString(Model.CurrentPage)">@Model.CurrentPage</a>
            </li>

            @for (int i = 1; i <= 2 && Model.CurrentPage + i <= Model.AllPagesCount; i++)
            {
                <li class="page-item">
                    <a class="page-link" href="@getUpdatedQueryString(Model.CurrentPage + i)">@(Model.CurrentPage + i)</a>
                </li>
            }

            <li class="page-item @(to == all ? "disabled" : string.Empty)">
                <a class="page-link" href="@getUpdatedQueryString(Model.AllPagesCount)" aria-label="Last">
                    <span aria-hidden="true">Последен</span>
                </a>
            </li>
        </ul>
    </nav>
}